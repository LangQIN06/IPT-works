#include "Adafruit_APDS9960.h"
#include <ezButton.h>
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

ezButton limitSwitch1(2);
ezButton limitSwitch2(5);

#define servoMIN 150
#define servoMAX 500
#define MIN 600
#define MAX 1900
#define servoFREQ 50

byte servoNum = 0;
int Num[] = {0, 1, 2, 3};
int sc[] = {1450, 1400};
//stand for:STOP,CCW,CW

//Adafruit_APDS9960 apds;
Adafruit_APDS9960 apds;

// the setup function runs once when you press reset or power the board
void setup() {
  Serial.begin(115200);
  Serial.println("4 channel Servo test!");

  limitSwitch1.setDebounceTime(50);
  limitSwitch2.setDebounceTime(50);

  if (!apds.begin()) {
    Serial.println("failed to initialize device! Please check your wiring.");
  }
  else Serial.println("Device initialized!");

  //gesture mode will be entered once proximity mode senses something close
  apds.enableProximity(true);
  apds.enableGesture(true);

  pwm.begin();
  pwm.setOscillatorFrequency(27000000);
  pwm.setPWMFreq(servoFREQ);
  delay(10);

  for (int i = 0; i  < 4; i++) {
    pwm.writeMicroseconds(Num[i], MIN);
  }

  pwm.writeMicroseconds(4, 0);

  // always rotating:
  //  for (int i = 5; i  < 7; i++) {
  pwm.writeMicroseconds(5, 1205);
  pwm.writeMicroseconds(7, 1205);
  //  }
}

// set the pulse length in second:
void setServoPulse(uint8_t n, float pulse) {
  float pulselength;

  pulselength = 1000000;   // 1,000,000 us per second
  pulselength /= servoFREQ;   // Analog servos run at ~60 Hz updates
  //Serial.print(pulselength); Serial.println(" us per period");
  pulselength /= 4096;  // 12 bits of resolution
  //Serial.print(pulselength); Serial.println(" us per bit");
  pulse *= 1000000;  // convert input seconds to us
  pulse /= pulselength;
  //Serial.println(pulse);
  pwm.setPWM(n, 0, pulse);
}


// the loop function runs over and over again forever
void loop() {
  // CALL the loop() function first
  limitSwitch1.loop();
  limitSwitch2.loop();


  int state1 = limitSwitch1.getState();
  int state2 = limitSwitch2.getState();

  //read a gesture from the device
  uint8_t gesture = apds.readGesture();
  if (gesture == APDS9960_LEFT) {
    Serial.println("<");
    for (int servoNum = 0; servoNum < 4; servoNum++) {
      for (uint16_t microsec = MIN; microsec <= MAX; microsec ++) {
        pwm.writeMicroseconds(servoNum, microsec);
      }
    }

    pwm.writeMicroseconds(4, 1330);

    for (int i = 5; i  < 7; i++) {
      pwm.writeMicroseconds(5, 1292);
      pwm.writeMicroseconds(7, 1292);
    }
  }

  if (gesture == APDS9960_RIGHT)  {
    Serial.println(">");
    for (int servoNum = 3; servoNum >= 0; servoNum--) {
      for (uint16_t microsec = MAX; microsec >= MIN; microsec --) {
        pwm.writeMicroseconds(servoNum, microsec);
      }
    }

    pwm.writeMicroseconds(4, 1205);

    //for (int i = 6; i  >= 5; i--) {
  pwm.writeMicroseconds(5, 1205);
  pwm.writeMicroseconds(7, 1200);
   // }
  }

  //set 2 limit switches:
  if (state1 == LOW) {
    pwm.writeMicroseconds(4, 0);
    //pwm.writeMicroseconds(5, 0);
    Serial.println("The limit switch1: TOUCHED");
  }

  if (state2 == LOW) {
    pwm.writeMicroseconds(4, 0);
    //pwm.writeMicroseconds(5, 0);
    Serial.println("The limit switch2: TOUCHED");
  }

}
